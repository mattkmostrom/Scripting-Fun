#!/usr/bin/python

from numpy import *
import matplotlib.pyplot as plt
from matplotlib.ticker import AutoMinorLocator, MaxNLocator


rdf_x = [0.1, 0.2, 0.30000000000000004, 0.4, 0.5, 0.6000000000000001, 0.7000000000000001, 0.8, 0.9, 1.0, 1.1, 1.2000000000000002, 1.3, 1.4000000000000001, 1.5, 1.6, 1.7000000000000002, 1.8, 1.9000000000000001, 2.0, 2.1, 2.2, 2.3000000000000003, 2.4000000000000004, 2.5, 2.6, 2.7, 2.8000000000000003, 2.9000000000000004, 3.0, 3.1, 3.2, 3.3000000000000003, 3.4000000000000004, 3.5, 3.6, 3.7, 3.8000000000000003, 3.9000000000000004, 4.0, 4.1000000000000005, 4.2, 4.3, 4.4, 4.5, 4.6000000000000005, 4.7, 4.800000000000001, 4.9, 5.0, 5.1000000000000005, 5.2, 5.300000000000001, 5.4, 5.5, 5.6000000000000005, 5.7, 5.800000000000001, 5.9, 6.0, 6.1000000000000005, 6.2, 6.300000000000001, 6.4, 6.5, 6.6000000000000005, 6.7, 6.800000000000001, 6.9, 7.0, 7.1000000000000005, 7.2, 7.300000000000001, 7.4, 7.5, 7.6000000000000005, 7.7, 7.800000000000001, 7.9, 8.0, 8.1, 8.200000000000001, 8.3, 8.4, 8.5, 8.6, 8.700000000000001, 8.8, 8.9, 9.0, 9.1, 9.200000000000001, 9.3, 9.4, 9.5, 9.600000000000001, 9.700000000000001, 9.8, 9.9, 10.0, 10.100000000000001, 10.200000000000001, 10.3, 10.4, 10.5, 10.600000000000001, 10.700000000000001, 10.8, 10.9, 11.0, 11.100000000000001, 11.200000000000001, 11.3, 11.4, 11.5, 11.600000000000001, 11.700000000000001, 11.8, 11.9, 12.0, 12.100000000000001, 12.200000000000001, 12.3, 12.4, 12.5, 12.600000000000001, 12.700000000000001, 12.8, 12.9, 13.0, 13.100000000000001, 13.200000000000001, 13.3, 13.4, 13.5, 13.600000000000001, 13.700000000000001, 13.8, 13.9, 14.0]

rdf_xe = [ 1.74396575, 23.10754614, 37.91510716, 47.45040135, 53.83040938, 55.95223437,
 57.43223251, 56.86054986, 49.42671645, 41.08201977, 32.32342023, 23.41031797,
 17.28830738, 12.44503448,  8.86709695,  6.31279268,  4.6224144,   3.41078074,
  2.56200323,  1.8515103,   1.46187303,  1.22389883,  0.99121431,  0.87400135,
  0.80082907,  0.7799689,   0.69694836,  0.67919754,  0.69399192,  0.63816228,
  0.78396795,  0.83281177,  1.06068563,  1.23053177,  1.51523337,  1.78343822,
  2.0632894,   2.20089121,  2.36885814,  2.44736526,  2.46326948,  2.36944704,
  2.30548059,  2.18356042,  2.07869234,  1.90523038,  1.72186025,  1.49544054,
  1.30549261,  1.09637313,  0.94629642,  0.78383865,  0.6864524,   0.5741451,
  0.49580514,  0.39928808,  0.34621665,  0.28288465,  0.24448586,  0.21686537,
  0.18856639,  0.16861965,  0.14309688,  0.1302865,   0.11640197,  0.10489417,
  0.10580085,  0.10396912,  0.10500669,  0.10879024,  0.11278176,  0.11056779,
  0.12490403,  0.1455428,   0.16804079,  0.20219455,  0.24511803,  0.30633104,
  0.43163688,  0.63255091,  0.92199906,  1.17924315,  1.31529463,  1.34125861,
  1.24760936,  1.09166848,  0.91764226,  0.78287787,  0.66696801,  0.57213559,
  0.49736333,  0.45384868,  0.40267078,  0.38099086,  0.35304437,  0.34572758,
  0.33449642,  0.34229232,  0.36293325,  0.38983448,  0.40956383,  0.4411878,
  0.48888247,  0.55853341,  0.63383862,  0.72939448,  0.84134022,  0.97873798,
  1.15931668,  1.4004093,   1.7268389,   2.10984079,  2.50447813,  2.80744132,
  2.83715864,  2.48128896,  1.86210714,  1.23115498,  0.84228254,  0.69681928,
  0.66938776,  0.718138,    0.78132063,  0.87349516,  0.92520406,  0.97414262,
  0.98311848,  0.99201535,  0.96485255,  0.96416883,  0.94056199,  0.9158556,
  0.19234989,  0.,          0.,          0.,          0.,          0.,
  0.,          0.        ]

rdf_kr = [0.,         1.78218404, 3.28148172, 3.46889393, 4.13466696, 5.06366575,
 6.25582968, 7.58223833, 8.80719518, 9.64925356, 9.89354113, 9.96467185,
 9.30110248, 9.04861078, 8.51827392, 7.65981107, 7.0212589,  6.63054184,
 6.67314022, 6.95179073, 7.26844736, 7.5548191,  7.95461457, 8.18248781,
 8.47219739, 8.30606228, 8.13385581, 7.8762922,  7.45387045, 6.84302092,
 6.43514943, 5.74386378, 5.19762764, 4.64398574, 4.08353958, 3.61269449,
 3.18498213, 2.7272282,  2.35649355, 1.96835862, 1.66874341, 1.40606065,
 1.1425916,  0.9631579,  0.76693634, 0.66007707, 0.53547352, 0.42344551,
 0.35840912, 0.28616784, 0.23355254, 0.20526,    0.16368938, 0.14563409,
 0.12927673, 0.11528341, 0.1115873,  0.10535078, 0.10122472, 0.09080652,
 0.09510638, 0.09484494, 0.09480862, 0.09572278, 0.10750351, 0.10976458,
 0.10549159, 0.11981069, 0.1213898,  0.13800236, 0.13484942, 0.14782777,
 0.14848747, 0.16486551, 0.18738392, 0.21043101, 0.25532772, 0.36599468,
 0.5312244,  0.7397655,  0.92619088, 0.98590354, 0.93612429, 0.83242197,
 0.71308504, 0.58485874, 0.48322775, 0.4016884,  0.33125667, 0.28628099,
 0.25567379, 0.2274655,  0.20688088, 0.19345508, 0.1881061,  0.17713548,
 0.17902205, 0.18222665, 0.18386314, 0.19069369, 0.20415737, 0.21608015,
 0.23297527, 0.26707338, 0.30048304, 0.34260569, 0.40392287, 0.48396267,
 0.57605386, 0.71081158, 0.86990137, 1.10607121, 1.41720547, 1.82003282,
 2.32200821, 2.8267234,  3.22349094, 3.40002418, 3.26771795, 2.92239285,
 2.42421685, 1.92210673, 1.47524982, 1.13413217, 0.86871186, 0.70628576,
 0.59358253, 0.51311137, 0.46623466, 0.43555794, 0.40638312, 0.38639704,
 0.07841305, 0.,         0.,         0.,         0.,         0.,
 0.,         0.        ]

rdf_ar = [ 0.,          0.68125245,  1.05972604,  1.66055285,  1.63500589,  2.27084151,
  3.26723115,  3.75753306,  4.90333556,  6.49233588,  8.18628981,  9.53280342,
 10.29537731, 11.43183326, 11.50559698, 11.99110763, 12.25311506, 12.12377051,
 12.33802919, 12.41923222, 12.98705073, 13.56170947, 13.30824735, 13.49849696,
 13.07677709, 12.74123486, 11.93827173, 10.6723758,   9.85831433,  8.80935117,
  7.86524034,  6.74799183,  5.91482272,  5.13650206,  4.41117915,  3.65332141,
  3.06289909,  2.50327252,  2.05719429,  1.64181841,  1.34710479,  1.12615201,
  0.8695272,   0.69356848,  0.56316869,  0.41370955,  0.33214527,  0.27764586,
  0.20457435,  0.17358313,  0.15060368,  0.10606778,  0.10452823,  0.08457249,
  0.07769656,  0.06777767,  0.06017835,  0.05589348,  0.05186208,  0.04882309,
  0.05089712,  0.04625569,  0.04823178,  0.04440781,  0.0436969,   0.04425951,
  0.04461756,  0.04596686,  0.04621814,  0.05116345,  0.05486778,  0.05479982,
  0.06149042,  0.06518924,  0.06830691,  0.08727957,  0.12363428,  0.19214813,
  0.29854598,  0.39619088,  0.44534244,  0.41793075,  0.35669583,  0.30046168,
  0.23299305,  0.18459031,  0.14580909,  0.12175276,  0.10277701,  0.08040461,
  0.07099636,  0.06487352,  0.05860236,  0.05481785,  0.05344341,  0.05285324,
  0.0532896,   0.05305881,  0.05727497,  0.06063147,  0.06651578,  0.06790261,
  0.08257995,  0.09706084,  0.11505597,  0.1466063,   0.1916599,   0.25447676,
  0.34552877,  0.47760864,  0.6512842,   0.89436108,  1.21925463,  1.60583931,
  2.11474155,  2.64481481,  3.17041923,  3.52755104,  3.67287487,  3.50452347,
  3.09967307,  2.60101674,  2.07599854,  1.59524548,  1.20898875,  0.90747839,
  0.69755622,  0.56258213,  0.45334954,  0.40173739,  0.36371045,  0.3361299,
  0.06943853,  0.,          0.,          0.,          0.,          0.,
  0.,          0.        ]

rdf_ne = [ 0.,          0.29370903,  0.19580602,  0.47727717,  0.49343116,  0.71795539,
  0.87513301,  1.15647929,  1.55919606,  2.57876524,  3.54392708,  4.79316812,
  6.55544641,  8.17290318,  9.51356167, 10.64236296, 11.88047925, 13.46710271,
 14.51622279, 15.65909668, 15.9322161,  14.74370759, 12.96428306, 10.85907535,
  9.17218041,  8.3959071,   7.26657885,  6.49681367,  6.05997504,  5.48191578,
  4.96218495,  4.62476985,  4.21063848,  3.73437306,  3.30152921,  2.95748671,
  2.56249861,  2.22112365,  1.94724642,  1.5735461,   1.34361832,  1.1065704,
  0.94387184,  0.74701614,  0.64311398,  0.52106979,  0.44621435,  0.36280203,
  0.31878622,  0.26034368,  0.21319594,  0.18921639,  0.15642175,  0.14121401,
  0.12894069,  0.11332523,  0.1039598,   0.0904526,   0.09112489,  0.08958125,
  0.08461598,  0.08511755,  0.09279696,  0.09680351,  0.10580477,  0.11057916,
  0.13164236,  0.15155487,  0.1781625,   0.19972214,  0.2232678,   0.24634391,
  0.28990607,  0.35431735,  0.48403247,  0.6657269,   0.90525194,  1.12549839,
  1.22180319,  1.1472091,   0.99272845,  0.80652044,  0.65580378,  0.51948535,
  0.41440412,  0.33032337,  0.26410142,  0.21459267,  0.17012208,  0.13648405,
  0.12243492,  0.10653198,  0.09359025,  0.08775372,  0.08975618,  0.08337053,
  0.08490685,  0.09327494,  0.09661442,  0.10491286,  0.12202126,  0.14149074,
  0.16754897,  0.20963699,  0.28510422,  0.38451938,  0.52841458,  0.71976841,
  0.94290461,  1.16813662,  1.35400314,  1.46863878,  1.52598043,  1.48694149,
  1.45257713,  1.46055631,  1.511607,    1.58274655,  1.72234905,  1.86774464,
  1.93152652,  1.92158005,  1.80511948,  1.65039411,  1.52416657,  1.39243534,
  1.31625493,  1.22549661,  1.1496323,   1.07991073,  1.01888501,  0.97410796,
  0.20429622,  0.,          0.,          0.,          0.,          0.,
  0.,          0.        ]





f, (ax, ax2) = plt.subplots(2, 1, sharex=True, gridspec_kw={'height_ratios': [1, 3]})

ax.plot(rdf_x, rdf_ne, color='g', zorder=1, label="Ne")
ax.plot(rdf_x, rdf_ar, color='r', zorder=1, label="Ar")
ax.plot(rdf_x, rdf_kr, color='y', zorder=1, label="Kr")
ax.plot(rdf_x, rdf_xe, color='b', zorder=1, label="Xe")

ax2.plot(rdf_x, rdf_ne, color='g', zorder=1, label="Ne")
ax2.plot(rdf_x, rdf_ar, color='r', zorder=1, label="Ar")
ax2.plot(rdf_x, rdf_kr, color='y', zorder=1, label="Kr")
ax2.plot(rdf_x, rdf_xe, color='b', zorder=1, label="Xe")

ax.set_xlim(0.,13.)
ax.set_ylim(50.,60.)
ax2.set_ylim(0.,16.)


plt.xlabel(r'Distance from Tetrahedral Pore Center ($\mathrm{\AA}$)')
#plt.ylabel(r'Radial Distribution Function')
f.text(0.0, 0.5, r'Radial Distribution Function', va='center', rotation='vertical')

#ax.set(xlabel=r'Distance (Angstrom)',ylabel=r'Radial Distribution Function')

ax.xaxis.set_minor_locator(AutoMinorLocator())
ax.yaxis.set_minor_locator(AutoMinorLocator())
ax.tick_params(which='both', axis="x", direction="in")
ax.tick_params(which='both', axis="y", direction="in")
ax.tick_params(which='both', bottom=False, top=True, left=True, right=True)
ax2.xaxis.set_minor_locator(AutoMinorLocator())
ax2.yaxis.set_minor_locator(AutoMinorLocator())
ax2.tick_params(which='both', axis="x", direction="in")
ax2.tick_params(which='both', axis="y", direction="in")
ax2.tick_params(which='both', bottom=True, top=False, left=True, right=True)

# hide the spines between ax and ax2
ax.spines['bottom'].set_visible(False)
ax2.spines['top'].set_visible(False)

ax.set_yticks([55,60])
ax.set_yticklabels([55,60])

ax2.set_yticks([0,5,10,15])
ax2.set_yticklabels([0,5,10,15])

# This looks pretty good, and was fairly painless, but you can get that
# cut-out diagonal lines look with just a bit more work. The important
# thing to know here is that in axes coordinates, which are always
# between 0-1, spine endpoints are at these locations (0,0), (0,1),
# (1,0), and (1,1).  Thus, we just need to put the diagonals in the
# appropriate corners of each of our axes, and so long as we use the
# right transform and disable clipping.

d = .01  # how big to make the diagonal lines in axes coordinates
# arguments to pass to plot, just so we don't keep repeating them
kwargs = dict(transform=ax.transAxes, color='k', clip_on=False)
ax.plot((-d, +d), (-3*d, +3*d), **kwargs)        # top-left diagonal
ax.plot((1 - d, 1 + d), (-3*d, +3*d), **kwargs)  # top-right diagonal

kwargs.update(transform=ax2.transAxes)  # switch to the bottom axes
ax2.plot((-d, +d), (1 - d, 1 + d), **kwargs)  # bottom-left diagonal
ax2.plot((1 - d, 1 + d), (1 - d, 1 + d), **kwargs)  # bottom-right diagonal

# What's cool about this is that now if we vary the distance between
# ax and ax2 via f.subplots_adjust(hspace=...) or plt.subplot_tool(),
# the diagonal lines will move accordingly, and stay right at the tips
# of the spines they are 'breaking'

leg = ax.legend(frameon=True,ncol=1,loc=1)
leg.get_frame().set_linewidth(0.0)

plt.tight_layout()
plt.savefig('rdf.eps', format='eps')

plt.show()

